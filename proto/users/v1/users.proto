syntax = "proto3";

package users.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {version: "1.0"};
  external_docs: {
    url: "https://github.com/johanbrandhorst/grpc-gateway-boilerplate";
    description: "gRPC-gateway boilerplate repository";
  }
  schemes: HTTPS;
};

service UserService {
  rpc AddUser(AddUserRequest) returns (AddUserResponse) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/users
      post: "/api/v1/users"
      body: "*"
      response_body: "user"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Add a user"
      description: "Add a user to the server."
      tags: "Users"
    };
  }
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      // Route to this method from GET requests to /api/v1/users/{id}
      get: "/api/v1/users/{id}"
      response_body: "user"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a user by their ID"
      description: "Gets a user from the server."
      tags: "Users"
    };
  }
  rpc ListUsers(ListUsersRequest) returns (stream ListUsersResponse) {
    option (google.api.http) = {
      // Route to this method from GET requests to /api/v1/users
      get: "/api/v1/users"
      response_body: "user"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List users"
      description: "List all users on the server."
      tags: "Users"
    };
  }
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      // Route to this method from PATCH requests to /api/v1/users/{user.id}
      patch: "/api/v1/user/{user.id}"
      body: "user"
      response_body: "user"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update a user"
      description: "Change properties of a user."
      tags: "Users"
    };
  }
}

message AddUserRequest {
  string email = 1;
  google.protobuf.Struct metadata = 2;
}

message AddUserResponse {
  User user = 1;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message ListUsersRequest {}

message ListUsersResponse {
  User user = 1;
}

message UpdateUserRequest {
  User user = 1;
  google.protobuf.FieldMask update_mask = 2;
}

message UpdateUserResponse {
  User user = 1;
}

message User {
  // Id uniquely identifies a user. Output only.
  string id = 1;
  string email = 2;
  // Output only.
  google.protobuf.Timestamp create_time = 3;
  // Output only.
  google.protobuf.Struct metadata = 4;
}
